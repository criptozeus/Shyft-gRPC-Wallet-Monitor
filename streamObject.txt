ClientDuplexStreamImpl {
  _events: {
    close: undefined,
    error: undefined,
    prefinish: undefined,        
    finish: undefined,
    drain: undefined,
    data: undefined,
    end: undefined,
    readable: undefined
  },
  _readableState: ReadableState {
    highWaterMark: 16,
    buffer: [],
    bufferIndex: 0,
    length: 0,
    pipes: [],
    awaitDrainWriters: null,     
    [Symbol(kState)]: 1052941
  },
  _writableState: WritableState {
    highWaterMark: 16,
    length: 0,
    corked: 0,
    onwrite: [Function: bound onwrite],
    writelen: 0,
    bufferedIndex: 0,
    pendingcb: 0,
    [Symbol(kState)]: 17580813,
    [Symbol(kBufferedValue)]: null
  },
  allowHalfOpen: true,
  _maxListeners: undefined,
  serialize: [Function: requestSerialize],
  deserialize: [Function: responseDeserialize],
  call: BaseStreamingInterceptingCall {
    call: ResolvingCall {
      channel: [InternalChannel],
      method: '/geyser.Geyser/Subscribe',
      filterStackFactory: [FilterStackFactory],
      callNumber: 1,
      child: null,
      readPending: false,
      pendingMessage: null,
      pendingHalfClose: false,
      ended: false,
      readFilterPending: false,
      writeFilterPending: false,
      pendingChildStatus: null,
      metadata: [Metadata],
      listener: [Object],
      statusWatchers: [Array],
      deadlineTimer: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 4157,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 17,
        [Symbol(triggerId)]: 0,
        [Symbol(kAsyncContextFrame)]: undefined
      },
      filterStack: null,
      deadlineStartTime: 2025-03-16T04:57:25.013Z,
      configReceivedTime: null,
      childStartTime: null,
      credentials: EmptyCallCredentials {},
      deadline: Infinity,
      host: 'grpc.va.shyft.to'
    },
    methodDefinition: {
      path: '/geyser.Geyser/Subscribe',
      requestStream: true,
      responseStream: true,
      requestSerialize: [Function: requestSerialize],
      responseDeserialize: [Function: responseDeserialize]
    }
  },
  [Symbol(shapeMode)]: true,
  [Symbol(kCapture)]: false
}